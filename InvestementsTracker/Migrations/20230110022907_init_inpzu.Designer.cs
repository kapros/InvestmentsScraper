// <auto-generated />
using System;
using InvestementsTracker.InPzuDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InvestementsTracker.Migrations
{
    [DbContext(typeof(InPzuDataContext))]
    [Migration("20230110022907_init_inpzu")]
    partial class initinpzu
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InvestementsTracker.InPzuDatabase.InPzuOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrderName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OrderType")
                        .HasColumnType("integer");

                    b.Property<long>("PortfolioId")
                        .HasColumnType("bigint");

                    b.Property<int>("PurchaseWorth")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PurchasedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("InPzuOrders");
                });

            modelBuilder.Entity("InvestementsTracker.InPzuDatabase.InPzuPortfolio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("Since")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("InPzuPortfolios");
                });

            modelBuilder.Entity("InvestementsTracker.InPzuDatabase.InPzuPosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FundId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FundName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("InPzuOrderId")
                        .HasColumnType("bigint");

                    b.Property<long>("PortfolioId")
                        .HasColumnType("bigint");

                    b.Property<double>("PriceOfUnit")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("PurchaseValue")
                        .HasColumnType("double precision");

                    b.Property<string>("RegistrationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UnitType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Units")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("InPzuOrderId");

                    b.HasIndex("PortfolioId");

                    b.ToTable("InPzuPositions");
                });

            modelBuilder.Entity("InvestementsTracker.InPzuDatabase.InPzuResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<double>("Percentile")
                        .HasColumnType("double precision");

                    b.Property<long>("PositionId")
                        .HasColumnType("bigint");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("InPzuResults");
                });

            modelBuilder.Entity("InvestementsTracker.InPzuDatabase.InPzuOrder", b =>
                {
                    b.HasOne("InvestementsTracker.InPzuDatabase.InPzuPortfolio", "Portfolio")
                        .WithMany()
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("InvestementsTracker.InPzuDatabase.InPzuPosition", b =>
                {
                    b.HasOne("InvestementsTracker.InPzuDatabase.InPzuOrder", null)
                        .WithMany("Positions")
                        .HasForeignKey("InPzuOrderId");

                    b.HasOne("InvestementsTracker.InPzuDatabase.InPzuPortfolio", "Portfolio")
                        .WithMany("Positions")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("InvestementsTracker.InPzuDatabase.InPzuResult", b =>
                {
                    b.HasOne("InvestementsTracker.InPzuDatabase.InPzuPosition", "Position")
                        .WithMany("Results")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("InvestementsTracker.InPzuDatabase.InPzuOrder", b =>
                {
                    b.Navigation("Positions");
                });

            modelBuilder.Entity("InvestementsTracker.InPzuDatabase.InPzuPortfolio", b =>
                {
                    b.Navigation("Positions");
                });

            modelBuilder.Entity("InvestementsTracker.InPzuDatabase.InPzuPosition", b =>
                {
                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
